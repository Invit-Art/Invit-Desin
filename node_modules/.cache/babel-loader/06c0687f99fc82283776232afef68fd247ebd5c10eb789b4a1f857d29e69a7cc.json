{"ast":null,"code":"// src/Database/firebaseAuth.js\n\nimport { auth } from \"./firebaseConfig\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, updatePassword } from \"firebase/auth\";\n\n// 🔐 Registrar nuevo usuario\nexport const register = async (email, password) => {\n  try {\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    return userCredential.user;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// 🔑 Iniciar sesión\nexport const login = async (email, password) => {\n  try {\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    return userCredential.user;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// 🔓 Cerrar sesión\nexport const logout = async () => {\n  try {\n    await signOut(auth);\n  } catch (error) {\n    throw error;\n  }\n};\n\n// 🔁 Cambiar contraseña del usuario actual\nexport const changeUserPassword = async newPassword => {\n  if (!auth.currentUser) {\n    throw new Error(\"No hay usuario autenticado.\");\n  }\n  try {\n    await updatePassword(auth.currentUser, newPassword);\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","updatePassword","register","email","password","userCredential","user","error","login","logout","changeUserPassword","newPassword","currentUser","Error"],"sources":["D:/invit-desin/src/Database/firebaseAuth.js"],"sourcesContent":["// src/Database/firebaseAuth.js\r\n\r\nimport { auth } from \"./firebaseConfig\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  updatePassword,\r\n} from \"firebase/auth\";\r\n\r\n// 🔐 Registrar nuevo usuario\r\nexport const register = async (email, password) => {\r\n  try {\r\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n    return userCredential.user;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// 🔑 Iniciar sesión\r\nexport const login = async (email, password) => {\r\n  try {\r\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n    return userCredential.user;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// 🔓 Cerrar sesión\r\nexport const logout = async () => {\r\n  try {\r\n    await signOut(auth);\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// 🔁 Cambiar contraseña del usuario actual\r\nexport const changeUserPassword = async (newPassword) => {\r\n  if (!auth.currentUser) {\r\n    throw new Error(\"No hay usuario autenticado.\");\r\n  }\r\n\r\n  try {\r\n    await updatePassword(auth.currentUser, newPassword);\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA;;AAEA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,SACEC,8BAA8B,EAC9BC,0BAA0B,EAC1BC,OAAO,EACPC,cAAc,QACT,eAAe;;AAEtB;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EACjD,IAAI;IACF,MAAMC,cAAc,GAAG,MAAMP,8BAA8B,CAACD,IAAI,EAAEM,KAAK,EAAEC,QAAQ,CAAC;IAClF,OAAOC,cAAc,CAACC,IAAI;EAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOL,KAAK,EAAEC,QAAQ,KAAK;EAC9C,IAAI;IACF,MAAMC,cAAc,GAAG,MAAMN,0BAA0B,CAACF,IAAI,EAAEM,KAAK,EAAEC,QAAQ,CAAC;IAC9E,OAAOC,cAAc,CAACC,IAAI;EAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,MAAM,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAI;IACF,MAAMT,OAAO,CAACH,IAAI,CAAC;EACrB,CAAC,CAAC,OAAOU,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,kBAAkB,GAAG,MAAOC,WAAW,IAAK;EACvD,IAAI,CAACd,IAAI,CAACe,WAAW,EAAE;IACrB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EAEA,IAAI;IACF,MAAMZ,cAAc,CAACJ,IAAI,CAACe,WAAW,EAAED,WAAW,CAAC;EACrD,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}