{"ast":null,"code":"var _jsxFileName = \"D:\\\\invit-desin\\\\src\\\\Database\\\\RegistroCliente.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { setDoc, doc, getDoc } from \"firebase/firestore\";\nimport { auth, db } from \"./firebaseConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistroCliente = ({\n  onLogin\n}) => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [nombreCliente, setNombreCliente] = useState(\"\");\n  const [categoria, setCategoria] = useState(\"XV A√±os\"); // Puedes hacer esto din√°mico\n\n  const registrarCliente = async (email, categoria, nombreCliente) => {\n    const ref = doc(db, \"Clientes\", \"Categorias\", categoria, nombreCliente);\n    const snap = await getDoc(ref);\n    if (snap.exists()) {\n      throw new Error(`‚ö†Ô∏è Ya existe un cliente llamado \"${nombreCliente}\" en la categor√≠a \"${categoria}\".`);\n    }\n    await setDoc(ref, {\n      nombreCliente,\n      categoria,\n      correo: email,\n      rutaPersonalizada: `/${categoria}/${nombreCliente}/invitaciones`\n    });\n    console.log(`‚úÖ Cliente guardado en /Clientes/Categorias/${categoria}/${nombreCliente}`);\n  };\n  const generarNombreClienteUnico = async (categoria, nombreClienteBase, correo) => {\n    const clientesRef = collection(db, \"Clientes\", \"Categorias\", categoria);\n    const snapshot = await getDocs(clientesRef);\n    let variantes = snapshot.docs.filter(doc => doc.id.startsWith(nombreClienteBase)).map(doc => {\n      var _doc$data;\n      return {\n        id: doc.id,\n        correo: ((_doc$data = doc.data()) === null || _doc$data === void 0 ? void 0 : _doc$data.correo) || \"\"\n      };\n    });\n\n    // ‚ö†Ô∏è Si ya existe una coincidencia exacta de nombre + correo ‚Üí abortar\n    const yaRegistrado = variantes.find(v => v.id === nombreClienteBase && v.correo === correo);\n    if (yaRegistrado) {\n      throw new Error(`üö´ Este cliente ya fue registrado con ese correo.`);\n    }\n\n    // üåÄ Buscar variante libre tipo Samuel0001, Samuel0002, ...\n    let contador = 1;\n    let nuevoNombre = nombreClienteBase;\n    while (variantes.some(v => v.id === nuevoNombre)) {\n      const sufijo = String(contador).padStart(4, \"0\");\n      nuevoNombre = `${nombreClienteBase}${sufijo}`;\n      contador++;\n    }\n    return nuevoNombre;\n  };\n  const handleRegister = async () => {\n    if (!email || !password || !nombreCliente || !categoria) {\n      alert(\"‚ö†Ô∏è Por favor, completa todos los campos.\");\n      return;\n    }\n    try {\n      const nombreClienteBase = nombreCliente.trim().replace(/\\s+/g, \"-\");\n      const nombreFinal = await generarNombreClienteUnico(categoria, nombreClienteBase, email);\n      const userCred = await createUserWithEmailAndPassword(auth, email, password);\n      const ref = doc(db, \"Clientes\", \"Categorias\", categoria, nombreFinal);\n      await setDoc(ref, {\n        nombreCliente: nombreFinal,\n        categoria,\n        correo: email,\n        rutaPersonalizada: `/${categoria}/${nombreFinal}/invitaciones`\n      });\n      console.log(`‚úÖ Cliente guardado en /Clientes/Categorias/${categoria}/${nombreFinal}`);\n      alert(`‚úÖ Registro exitoso: \"${nombreFinal}\"`);\n      onLogin(userCred.user);\n    } catch (err) {\n      alert(\"‚ùå Error: \" + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCDD Registro de Cliente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: nombreCliente,\n      onChange: e => setNombreCliente(e.target.value),\n      placeholder: \"Nombre del cliente (ej. Samuel)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: categoria,\n      onChange: e => setCategoria(e.target.value),\n      placeholder: \"Categor\\xEDa del evento (ej. XV A\\xF1os)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Correo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Contrase\\xF1a\",\n      type: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRegister,\n      children: \"Registrarse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistroCliente, \"hWfp+3jHxNal5s3wXZAoHm0wWFY=\");\n_c = RegistroCliente;\nexport default RegistroCliente;\nvar _c;\n$RefreshReg$(_c, \"RegistroCliente\");","map":{"version":3,"names":["React","useState","createUserWithEmailAndPassword","setDoc","doc","getDoc","auth","db","jsxDEV","_jsxDEV","RegistroCliente","onLogin","_s","email","setEmail","password","setPassword","nombreCliente","setNombreCliente","categoria","setCategoria","registrarCliente","ref","snap","exists","Error","correo","rutaPersonalizada","console","log","generarNombreClienteUnico","nombreClienteBase","clientesRef","collection","snapshot","getDocs","variantes","docs","filter","id","startsWith","map","_doc$data","data","yaRegistrado","find","v","contador","nuevoNombre","some","sufijo","String","padStart","handleRegister","alert","trim","replace","nombreFinal","userCred","user","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","type","onClick","_c","$RefreshReg$"],"sources":["D:/invit-desin/src/Database/RegistroCliente.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { setDoc, doc, getDoc } from \"firebase/firestore\";\r\nimport { auth, db } from \"./firebaseConfig\";\r\n\r\nconst RegistroCliente = ({ onLogin }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [nombreCliente, setNombreCliente] = useState(\"\");\r\n  const [categoria, setCategoria] = useState(\"XV A√±os\"); // Puedes hacer esto din√°mico\r\n\r\n  const registrarCliente = async (email, categoria, nombreCliente) => {\r\n    const ref = doc(db, \"Clientes\", \"Categorias\", categoria, nombreCliente);\r\n    const snap = await getDoc(ref);\r\n\r\n    if (snap.exists()) {\r\n        throw new Error(`‚ö†Ô∏è Ya existe un cliente llamado \"${nombreCliente}\" en la categor√≠a \"${categoria}\".`);\r\n    }\r\n\r\n    await setDoc(ref, {\r\n        nombreCliente,\r\n        categoria,\r\n        correo: email,\r\n        rutaPersonalizada: `/${categoria}/${nombreCliente}/invitaciones`,\r\n    });\r\n\r\n    console.log(`‚úÖ Cliente guardado en /Clientes/Categorias/${categoria}/${nombreCliente}`);\r\n    };\r\n\r\n    const generarNombreClienteUnico = async (categoria, nombreClienteBase, correo) => {\r\n  const clientesRef = collection(db, \"Clientes\", \"Categorias\", categoria);\r\n  const snapshot = await getDocs(clientesRef);\r\n\r\n  let variantes = snapshot.docs\r\n    .filter(doc => doc.id.startsWith(nombreClienteBase))\r\n    .map(doc => ({\r\n      id: doc.id,\r\n      correo: doc.data()?.correo || \"\"\r\n    }));\r\n\r\n  // ‚ö†Ô∏è Si ya existe una coincidencia exacta de nombre + correo ‚Üí abortar\r\n  const yaRegistrado = variantes.find(v => v.id === nombreClienteBase && v.correo === correo);\r\n  if (yaRegistrado) {\r\n    throw new Error(`üö´ Este cliente ya fue registrado con ese correo.`);\r\n  }\r\n\r\n  // üåÄ Buscar variante libre tipo Samuel0001, Samuel0002, ...\r\n  let contador = 1;\r\n  let nuevoNombre = nombreClienteBase;\r\n  while (variantes.some(v => v.id === nuevoNombre)) {\r\n    const sufijo = String(contador).padStart(4, \"0\");\r\n    nuevoNombre = `${nombreClienteBase}${sufijo}`;\r\n    contador++;\r\n  }\r\n\r\n  return nuevoNombre;\r\n};\r\n\r\n\r\n  const handleRegister = async () => {\r\n  if (!email || !password || !nombreCliente || !categoria) {\r\n    alert(\"‚ö†Ô∏è Por favor, completa todos los campos.\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const nombreClienteBase = nombreCliente.trim().replace(/\\s+/g, \"-\");\r\n    const nombreFinal = await generarNombreClienteUnico(categoria, nombreClienteBase, email);\r\n\r\n    const userCred = await createUserWithEmailAndPassword(auth, email, password);\r\n\r\n    const ref = doc(db, \"Clientes\", \"Categorias\", categoria, nombreFinal);\r\n    await setDoc(ref, {\r\n      nombreCliente: nombreFinal,\r\n      categoria,\r\n      correo: email,\r\n      rutaPersonalizada: `/${categoria}/${nombreFinal}/invitaciones`,\r\n    });\r\n\r\n    console.log(`‚úÖ Cliente guardado en /Clientes/Categorias/${categoria}/${nombreFinal}`);\r\n    alert(`‚úÖ Registro exitoso: \"${nombreFinal}\"`);\r\n    onLogin(userCred.user);\r\n  } catch (err) {\r\n    alert(\"‚ùå Error: \" + err.message);\r\n  }\r\n};\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h2>üìù Registro de Cliente</h2>\r\n      <input\r\n        value={nombreCliente}\r\n        onChange={(e) => setNombreCliente(e.target.value)}\r\n        placeholder=\"Nombre del cliente (ej. Samuel)\"\r\n      />\r\n      <input\r\n        value={categoria}\r\n        onChange={(e) => setCategoria(e.target.value)}\r\n        placeholder=\"Categor√≠a del evento (ej. XV A√±os)\"\r\n      />\r\n      <input\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        placeholder=\"Correo\"\r\n      />\r\n      <input\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        placeholder=\"Contrase√±a\"\r\n        type=\"password\"\r\n      />\r\n      <button onClick={handleRegister}>Registrarse</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistroCliente;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}