{"ast":null,"code":"var _jsxFileName = \"D:\\\\invit-desin\\\\src\\\\invit-deluxe\\\\Countdown.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n\n// Traducción de meses de español a inglés\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst translateMonth = month => {\n  const months = {\n    enero: \"January\",\n    febrero: \"February\",\n    marzo: \"March\",\n    abril: \"April\",\n    mayo: \"May\",\n    junio: \"June\",\n    julio: \"July\",\n    agosto: \"August\",\n    septiembre: \"September\",\n    octubre: \"October\",\n    noviembre: \"November\",\n    diciembre: \"December\"\n  };\n  return months[month.toLowerCase()] || month;\n};\nconst Countdown = ({\n  day,\n  month,\n  year,\n  time\n}) => {\n  _s();\n  const [countdown, setCountdown] = useState({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  });\n  useEffect(() => {\n    // Validaciones para evitar errores\n    if (!day || !month || !year || !time) {\n      console.error(\"Error: Se requieren todos los parámetros (día, mes, año, hora)\");\n      return;\n    }\n\n    // Separar hora y verificar formato correcto\n    const timeParts = time.match(/^(\\d{1,2}):(\\d{2})\\s?(am|pm)$/i);\n    if (!timeParts) {\n      console.error(\"Error: Formato de hora incorrecto. Usa 'HH:MM AM/PM'\");\n      return;\n    }\n    const hour = parseInt(timeParts[1], 10);\n    const minutes = timeParts[2];\n    const period = timeParts[3].toLowerCase();\n\n    // Convertir a formato de 24 horas\n    let hour24 = hour;\n    if (period === \"pm\" && hour !== 12) hour24 += 12;else if (period === \"am\" && hour === 12) hour24 = 0;\n    const countDownDate = new Date(`${translateMonth(month)} ${day}, ${year} ${hour24}:${minutes}:00`).getTime();\n    if (isNaN(countDownDate)) {\n      console.error(\"Error: Fecha inválida generada\");\n      return;\n    }\n\n    // Iniciar el intervalo para actualizar el conteo regresivo\n    const interval = setInterval(() => {\n      const now = new Date().getTime();\n      const timeRemaining = countDownDate - now;\n      if (timeRemaining < 0) {\n        clearInterval(interval);\n        setCountdown({\n          days: 0,\n          hours: 0,\n          minutes: 0,\n          seconds: 0\n        });\n      } else {\n        setCountdown({\n          days: Math.floor(timeRemaining / (1000 * 60 * 60 * 24)),\n          hours: Math.floor(timeRemaining % (1000 * 60 * 60 * 24) / (1000 * 60 * 60)),\n          minutes: Math.floor(timeRemaining % (1000 * 60 * 60) / (1000 * 60)),\n          seconds: Math.floor(timeRemaining % (1000 * 60) / 1000)\n        });\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [day, month, year, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cuenta aparecer\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"segmento\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"numero\",\n        children: countdown.days\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"unidad\",\n        children: \" D\\xEDas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"segmento\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"numero\",\n        children: countdown.hours\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"unidad\",\n        children: \" Horas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"segmento\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"numero\",\n        children: countdown.minutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"unidad\",\n        children: \" Minutos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"segmento\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"numero\",\n        children: countdown.seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"unidad\",\n        children: \" Segundos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Countdown, \"TU/QjcqfKeARAHbBLT3p3xW5pgU=\");\n_c = Countdown;\nexport default Countdown;\nvar _c;\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","translateMonth","month","months","enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre","toLowerCase","Countdown","day","year","time","_s","countdown","setCountdown","days","hours","minutes","seconds","console","error","timeParts","match","hour","parseInt","period","hour24","countDownDate","Date","getTime","isNaN","interval","setInterval","now","timeRemaining","clearInterval","Math","floor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/invit-desin/src/invit-deluxe/Countdown.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\n// Traducción de meses de español a inglés\r\nconst translateMonth = (month) => {\r\n  const months = {\r\n    enero: \"January\",\r\n    febrero: \"February\",\r\n    marzo: \"March\",\r\n    abril: \"April\",\r\n    mayo: \"May\",\r\n    junio: \"June\",\r\n    julio: \"July\",\r\n    agosto: \"August\",\r\n    septiembre: \"September\",\r\n    octubre: \"October\",\r\n    noviembre: \"November\",\r\n    diciembre: \"December\",\r\n  };\r\n  return months[month.toLowerCase()] || month;\r\n};\r\n\r\nconst Countdown = ({ day, month, year, time }) => {\r\n  const [countdown, setCountdown] = useState({\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Validaciones para evitar errores\r\n    if (!day || !month || !year || !time) {\r\n      console.error(\"Error: Se requieren todos los parámetros (día, mes, año, hora)\");\r\n      return;\r\n    }\r\n\r\n    // Separar hora y verificar formato correcto\r\n    const timeParts = time.match(/^(\\d{1,2}):(\\d{2})\\s?(am|pm)$/i);\r\n    if (!timeParts) {\r\n      console.error(\"Error: Formato de hora incorrecto. Usa 'HH:MM AM/PM'\");\r\n      return;\r\n    }\r\n\r\n    const hour = parseInt(timeParts[1], 10);\r\n    const minutes = timeParts[2];\r\n    const period = timeParts[3].toLowerCase();\r\n\r\n    // Convertir a formato de 24 horas\r\n    let hour24 = hour;\r\n    if (period === \"pm\" && hour !== 12) hour24 += 12;\r\n    else if (period === \"am\" && hour === 12) hour24 = 0;\r\n\r\n    const countDownDate = new Date(\r\n      `${translateMonth(month)} ${day}, ${year} ${hour24}:${minutes}:00`\r\n    ).getTime();\r\n\r\n    if (isNaN(countDownDate)) {\r\n      console.error(\"Error: Fecha inválida generada\");\r\n      return;\r\n    }\r\n\r\n    // Iniciar el intervalo para actualizar el conteo regresivo\r\n    const interval = setInterval(() => {\r\n      const now = new Date().getTime();\r\n      const timeRemaining = countDownDate - now;\r\n\r\n      if (timeRemaining < 0) {\r\n        clearInterval(interval);\r\n        setCountdown({ days: 0, hours: 0, minutes: 0, seconds: 0 });\r\n      } else {\r\n        setCountdown({\r\n          days: Math.floor(timeRemaining / (1000 * 60 * 60 * 24)),\r\n          hours: Math.floor((timeRemaining % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n          minutes: Math.floor((timeRemaining % (1000 * 60 * 60)) / (1000 * 60)),\r\n          seconds: Math.floor((timeRemaining % (1000 * 60)) / 1000),\r\n        });\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [day, month, year, time]);\r\n\r\n  return (\r\n    <div className=\"cuenta aparecer\">\r\n      <p className=\"segmento\">\r\n        <span className=\"numero\">{countdown.days}</span>\r\n        <span className=\"unidad\"> Días</span>\r\n      </p>\r\n      <p className=\"segmento\">\r\n        <span className=\"numero\">{countdown.hours}</span>\r\n        <span className=\"unidad\"> Horas</span>\r\n      </p>\r\n      <p className=\"segmento\">\r\n        <span className=\"numero\">{countdown.minutes}</span>\r\n        <span className=\"unidad\"> Minutos</span>\r\n      </p>\r\n      <p className=\"segmento\">\r\n        <span className=\"numero\">{countdown.seconds}</span>\r\n        <span className=\"unidad\"> Segundos</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Countdown;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAChC,MAAMC,MAAM,GAAG;IACbC,KAAK,EAAE,SAAS;IAChBC,OAAO,EAAE,UAAU;IACnBC,KAAK,EAAE,OAAO;IACdC,KAAK,EAAE,OAAO;IACdC,IAAI,EAAE,KAAK;IACXC,KAAK,EAAE,MAAM;IACbC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,QAAQ;IAChBC,UAAU,EAAE,WAAW;IACvBC,OAAO,EAAE,SAAS;IAClBC,SAAS,EAAE,UAAU;IACrBC,SAAS,EAAE;EACb,CAAC;EACD,OAAOZ,MAAM,CAACD,KAAK,CAACc,WAAW,CAAC,CAAC,CAAC,IAAId,KAAK;AAC7C,CAAC;AAED,MAAMe,SAAS,GAAGA,CAAC;EAAEC,GAAG;EAAEhB,KAAK;EAAEiB,IAAI;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC;IACzC2B,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,CAAC;IACRC,OAAO,EAAE,CAAC;IACVC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF7B,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACoB,GAAG,IAAI,CAAChB,KAAK,IAAI,CAACiB,IAAI,IAAI,CAACC,IAAI,EAAE;MACpCQ,OAAO,CAACC,KAAK,CAAC,gEAAgE,CAAC;MAC/E;IACF;;IAEA;IACA,MAAMC,SAAS,GAAGV,IAAI,CAACW,KAAK,CAAC,gCAAgC,CAAC;IAC9D,IAAI,CAACD,SAAS,EAAE;MACdF,OAAO,CAACC,KAAK,CAAC,sDAAsD,CAAC;MACrE;IACF;IAEA,MAAMG,IAAI,GAAGC,QAAQ,CAACH,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACvC,MAAMJ,OAAO,GAAGI,SAAS,CAAC,CAAC,CAAC;IAC5B,MAAMI,MAAM,GAAGJ,SAAS,CAAC,CAAC,CAAC,CAACd,WAAW,CAAC,CAAC;;IAEzC;IACA,IAAImB,MAAM,GAAGH,IAAI;IACjB,IAAIE,MAAM,KAAK,IAAI,IAAIF,IAAI,KAAK,EAAE,EAAEG,MAAM,IAAI,EAAE,CAAC,KAC5C,IAAID,MAAM,KAAK,IAAI,IAAIF,IAAI,KAAK,EAAE,EAAEG,MAAM,GAAG,CAAC;IAEnD,MAAMC,aAAa,GAAG,IAAIC,IAAI,CAC5B,GAAGpC,cAAc,CAACC,KAAK,CAAC,IAAIgB,GAAG,KAAKC,IAAI,IAAIgB,MAAM,IAAIT,OAAO,KAC/D,CAAC,CAACY,OAAO,CAAC,CAAC;IAEX,IAAIC,KAAK,CAACH,aAAa,CAAC,EAAE;MACxBR,OAAO,CAACC,KAAK,CAAC,gCAAgC,CAAC;MAC/C;IACF;;IAEA;IACA,MAAMW,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,MAAMC,GAAG,GAAG,IAAIL,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;MAChC,MAAMK,aAAa,GAAGP,aAAa,GAAGM,GAAG;MAEzC,IAAIC,aAAa,GAAG,CAAC,EAAE;QACrBC,aAAa,CAACJ,QAAQ,CAAC;QACvBjB,YAAY,CAAC;UAAEC,IAAI,EAAE,CAAC;UAAEC,KAAK,EAAE,CAAC;UAAEC,OAAO,EAAE,CAAC;UAAEC,OAAO,EAAE;QAAE,CAAC,CAAC;MAC7D,CAAC,MAAM;QACLJ,YAAY,CAAC;UACXC,IAAI,EAAEqB,IAAI,CAACC,KAAK,CAACH,aAAa,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;UACvDlB,KAAK,EAAEoB,IAAI,CAACC,KAAK,CAAEH,aAAa,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;UAC7EjB,OAAO,EAAEmB,IAAI,CAACC,KAAK,CAAEH,aAAa,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,CAAC,CAAC;UACrEhB,OAAO,EAAEkB,IAAI,CAACC,KAAK,CAAEH,aAAa,IAAI,IAAI,GAAG,EAAE,CAAC,GAAI,IAAI;QAC1D,CAAC,CAAC;MACJ;IACF,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACJ,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACtB,GAAG,EAAEhB,KAAK,EAAEiB,IAAI,EAAEC,IAAI,CAAC,CAAC;EAE5B,oBACEpB,OAAA;IAAK+C,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BhD,OAAA;MAAG+C,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACrBhD,OAAA;QAAM+C,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAE1B,SAAS,CAACE;MAAI;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAChDpD,OAAA;QAAM+C,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACJpD,OAAA;MAAG+C,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACrBhD,OAAA;QAAM+C,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAE1B,SAAS,CAACG;MAAK;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjDpD,OAAA;QAAM+C,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACJpD,OAAA;MAAG+C,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACrBhD,OAAA;QAAM+C,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAE1B,SAAS,CAACI;MAAO;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnDpD,OAAA;QAAM+C,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eACJpD,OAAA;MAAG+C,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACrBhD,OAAA;QAAM+C,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAE1B,SAAS,CAACK;MAAO;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnDpD,OAAA;QAAM+C,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAjFIJ,SAAS;AAAAoC,EAAA,GAATpC,SAAS;AAmFf,eAAeA,SAAS;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}