{"ast":null,"code":"var _jsxFileName = \"D:\\\\invit-desin\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { db } from \"./Database/firebaseConfig\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport FotoSection from \"./FotoSection\";\nimport FormGen from \"./componentes/FormGen\";\nimport imagenes from \"./assets/imagenes\";\nimport \"./invit.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [nombre, setNombre] = useState(\"Invitado\");\n  const [invitados, setInvitados] = useState(1);\n  const [linkGenerado, setLinkGenerado] = useState(\"\");\n\n  // Función para actualizar datos y guardar en Firebase\n  const actualizarDatos = async (nuevoNombre, nuevaCantidad) => {\n    // Limpiar espacios innecesarios y solo permitir letras\n    let nombreLimpio = nuevoNombre.replace(/\\s+/g, \" \").trim();\n\n    // Validar que solo se ingresen letras y espacios\n    if (!/^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]*$/.test(nombreLimpio)) {\n      alert(\"El nombre solo puede contener letras y espacios.\");\n      return;\n    }\n\n    // Mostrar alerta si supera los 22 caracteres\n    if (nombreLimpio.length > 22) {\n      alert(\"El nombre no puede tener más de 22 caracteres.\");\n      return;\n    }\n\n    // Si el nombre tiene más de 11 caracteres, dividirlo en dos líneas en la invitación\n    let nombreFormateado = nombreLimpio.length > 11 ? nombreLimpio.slice(0, 11) + \"\\n\" + nombreLimpio.slice(11) : nombreLimpio;\n\n    // Validar número de invitados, asegurando que sea entre 1 y 25\n    let cantidadFinal = parseInt(nuevaCantidad, 10);\n    if (isNaN(cantidadFinal) || cantidadFinal < 1 || cantidadFinal > 25) {\n      alert(\"El número de invitados debe estar entre 1 y 25.\");\n      return;\n    }\n    setNombre(nombreFormateado);\n    setInvitados(cantidadFinal);\n    const idInvitacion = Date.now();\n    const nuevoLink = `https://tuweb.com/invitaciones/${idInvitacion}`;\n    setLinkGenerado(nuevoLink);\n    try {\n      await addDoc(collection(db, \"invitaciones\"), {\n        id: idInvitacion,\n        nombre: nombreFormateado,\n        // ✅ Solo afecta el nombre ingresado\n        invitados: cantidadFinal,\n        link: nuevoLink,\n        timestamp: new Date()\n      });\n    } catch (error) {\n      console.error(\"Error al guardar la invitación:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormGen, {\n      actualizarDatos: actualizarDatos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), linkGenerado && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tu invitaci\\xF3n ha sido generada:\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: linkGenerado,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: linkGenerado\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FotoSection, {\n      imageSrc: imagenes.img9,\n      buttonText1: \"Confirmar asistencia\",\n      buttonLink1: \"https://api.whatsapp.com/send?phone=+525619060019&text=Gracias por invitarme!\",\n      buttonText2: \"No puedo asistir\",\n      buttonLink2: \"https://api.whatsapp.com/send?phone=+525619060019&text=No podre asistir.\",\n      invitacion: {\n        nombre: `${nombre}, estás invitado a mi Fiesta`,\n        invitados: `Invitación para ${invitados} adulto(s)`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"GDDm3p/Nh9g3CNWFfVFAGwDbEI4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","db","collection","addDoc","FotoSection","FormGen","imagenes","jsxDEV","_jsxDEV","App","_s","nombre","setNombre","invitados","setInvitados","linkGenerado","setLinkGenerado","actualizarDatos","nuevoNombre","nuevaCantidad","nombreLimpio","replace","trim","test","alert","length","nombreFormateado","slice","cantidadFinal","parseInt","isNaN","idInvitacion","Date","now","nuevoLink","id","link","timestamp","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","imageSrc","img9","buttonText1","buttonLink1","buttonText2","buttonLink2","invitacion","_c","$RefreshReg$"],"sources":["D:/invit-desin/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { db } from \"./Database/firebaseConfig\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport FotoSection from \"./FotoSection\";\nimport FormGen from \"./componentes/FormGen\";\nimport imagenes from \"./assets/imagenes\";\nimport \"./invit.css\";\n\n\nconst App = () => {\n  const [nombre, setNombre] = useState(\"Invitado\");\n  const [invitados, setInvitados] = useState(1);\n  const [linkGenerado, setLinkGenerado] = useState(\"\");\n\n  // Función para actualizar datos y guardar en Firebase\n  const actualizarDatos = async (nuevoNombre, nuevaCantidad) => {\n    // Limpiar espacios innecesarios y solo permitir letras\n    let nombreLimpio = nuevoNombre.replace(/\\s+/g, \" \").trim();\n\n    // Validar que solo se ingresen letras y espacios\n    if (!/^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]*$/.test(nombreLimpio)) {\n        alert(\"El nombre solo puede contener letras y espacios.\");\n        return;\n    }\n\n    // Mostrar alerta si supera los 22 caracteres\n    if (nombreLimpio.length > 22) {\n        alert(\"El nombre no puede tener más de 22 caracteres.\");\n        return;\n    }\n\n    // Si el nombre tiene más de 11 caracteres, dividirlo en dos líneas en la invitación\n    let nombreFormateado = nombreLimpio.length > 11 \n        ? nombreLimpio.slice(0, 11) + \"\\n\" + nombreLimpio.slice(11) \n        : nombreLimpio;\n\n    // Validar número de invitados, asegurando que sea entre 1 y 25\n    let cantidadFinal = parseInt(nuevaCantidad, 10);\n    if (isNaN(cantidadFinal) || cantidadFinal < 1 || cantidadFinal > 25) {\n        alert(\"El número de invitados debe estar entre 1 y 25.\");\n        return;\n    }\n\n    setNombre(nombreFormateado);\n    setInvitados(cantidadFinal);\n\n    const idInvitacion = Date.now();\n    const nuevoLink = `https://tuweb.com/invitaciones/${idInvitacion}`;\n    setLinkGenerado(nuevoLink);\n\n    try {\n        await addDoc(collection(db, \"invitaciones\"), {\n            id: idInvitacion,\n            nombre: nombreFormateado, // ✅ Solo afecta el nombre ingresado\n            invitados: cantidadFinal,\n            link: nuevoLink,\n            timestamp: new Date(),\n        });\n    } catch (error) {\n        console.error(\"Error al guardar la invitación:\", error);\n    }\n};\n\n  return (\n    <div>\n      <FormGen actualizarDatos={actualizarDatos} />\n\n      {linkGenerado && (\n        <p>\n          Tu invitación ha sido generada:{\" \"}\n          <a href={linkGenerado} target=\"_blank\" rel=\"noopener noreferrer\">\n            {linkGenerado}\n          </a>\n        </p>\n      )}\n\n      <FotoSection\n        imageSrc={imagenes.img9}\n        buttonText1=\"Confirmar asistencia\"\n        buttonLink1=\"https://api.whatsapp.com/send?phone=+525619060019&text=Gracias por invitarme!\"\n        buttonText2=\"No puedo asistir\"\n        buttonLink2=\"https://api.whatsapp.com/send?phone=+525619060019&text=No podre asistir.\"\n        invitacion={{\n          nombre: `${nombre}, estás invitado a mi Fiesta`,\n          invitados: `Invitación para ${invitados} adulto(s)`,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}