{"ast":null,"code":"var _jsxFileName = \"D:\\\\invit-desin\\\\src\\\\AnimacionScroll.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AnimacionScroll({\n  className,\n  children\n}) {\n  _s();\n  const ref = useRef(null);\n  const [visible, setVisible] = useState(false);\n  const lastScrollY = useRef(window.scrollY);\n  useEffect(() => {\n    const handleScroll = () => {\n      var _ref$current;\n      const windowHeight = window.innerHeight;\n      const elementTop = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.getBoundingClientRect().top;\n      const showPoint = 100;\n      const scrollDown = window.scrollY > lastScrollY.current;\n      lastScrollY.current = window.scrollY;\n      if (elementTop && scrollDown && elementTop < windowHeight - showPoint) {\n        setVisible(true); // 🔥 Activa animación al bajar scroll\n      } else {\n        setVisible(true); // 🔥 Oculta la animación si ya no está visible\n      }\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll); // 🔥 Limpia el evento al desmontar\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: `${className} ${visible ? getAnimationClass(className) : \"\"}`,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n// 🔥 Función para asignar las clases de animación específicas\n_s(AnimacionScroll, \"6MShgFhk8n/bNz1ctIxJOL/rM6o=\");\n_c = AnimacionScroll;\nfunction getAnimationClass(className) {\n  if (className.includes(\"show-n-x\")) return \"active-n-x\";\n  if (className.includes(\"show-p-x\")) return \"active-p-x\";\n  if (className.includes(\"show-n-y\")) return \"active-n-y\";\n  if (className.includes(\"show-p-y\")) return \"active-p-y\";\n  if (className.includes(\"show\")) return \"active\";\n  return \"\";\n}\nexport default AnimacionScroll;\nvar _c;\n$RefreshReg$(_c, \"AnimacionScroll\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","AnimacionScroll","className","children","_s","ref","visible","setVisible","lastScrollY","window","scrollY","handleScroll","_ref$current","windowHeight","innerHeight","elementTop","current","getBoundingClientRect","top","showPoint","scrollDown","addEventListener","removeEventListener","getAnimationClass","fileName","_jsxFileName","lineNumber","columnNumber","_c","includes","$RefreshReg$"],"sources":["D:/invit-desin/src/AnimacionScroll.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nfunction AnimacionScroll({ className, children }) {\r\n  const ref = useRef(null);\r\n  const [visible, setVisible] = useState(false);\r\n  const lastScrollY = useRef(window.scrollY);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const windowHeight = window.innerHeight;\r\n      const elementTop = ref.current?.getBoundingClientRect().top;\r\n      const showPoint = 100;\r\n      const scrollDown = window.scrollY > lastScrollY.current;\r\n      lastScrollY.current = window.scrollY;\r\n\r\n      if (elementTop && scrollDown && elementTop < windowHeight - showPoint) {\r\n        setVisible(true); // 🔥 Activa animación al bajar scroll\r\n      } else {\r\n        setVisible(true); // 🔥 Oculta la animación si ya no está visible\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll); // 🔥 Limpia el evento al desmontar\r\n  }, []);\r\n\r\n  return (\r\n    <div ref={ref} className={`${className} ${visible ? getAnimationClass(className) : \"\"}`}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\n// 🔥 Función para asignar las clases de animación específicas\r\nfunction getAnimationClass(className) {\r\n  if (className.includes(\"show-n-x\")) return \"active-n-x\";\r\n  if (className.includes(\"show-p-x\")) return \"active-p-x\";\r\n  if (className.includes(\"show-n-y\")) return \"active-n-y\";\r\n  if (className.includes(\"show-p-y\")) return \"active-p-y\";\r\n  if (className.includes(\"show\")) return \"active\";\r\n  return \"\";\r\n}\r\n\r\nexport default AnimacionScroll;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,eAAeA,CAAC;EAAEC,SAAS;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAMC,GAAG,GAAGR,MAAM,CAAC,IAAI,CAAC;EACxB,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMU,WAAW,GAAGX,MAAM,CAACY,MAAM,CAACC,OAAO,CAAC;EAE1Cd,SAAS,CAAC,MAAM;IACd,MAAMe,YAAY,GAAGA,CAAA,KAAM;MAAA,IAAAC,YAAA;MACzB,MAAMC,YAAY,GAAGJ,MAAM,CAACK,WAAW;MACvC,MAAMC,UAAU,IAAAH,YAAA,GAAGP,GAAG,CAACW,OAAO,cAAAJ,YAAA,uBAAXA,YAAA,CAAaK,qBAAqB,CAAC,CAAC,CAACC,GAAG;MAC3D,MAAMC,SAAS,GAAG,GAAG;MACrB,MAAMC,UAAU,GAAGX,MAAM,CAACC,OAAO,GAAGF,WAAW,CAACQ,OAAO;MACvDR,WAAW,CAACQ,OAAO,GAAGP,MAAM,CAACC,OAAO;MAEpC,IAAIK,UAAU,IAAIK,UAAU,IAAIL,UAAU,GAAGF,YAAY,GAAGM,SAAS,EAAE;QACrEZ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;MACpB,CAAC,MAAM;QACLA,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;MACpB;IACF,CAAC;IAEDE,MAAM,CAACY,gBAAgB,CAAC,QAAQ,EAAEV,YAAY,CAAC;IAC/C,OAAO,MAAMF,MAAM,CAACa,mBAAmB,CAAC,QAAQ,EAAEX,YAAY,CAAC,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKK,GAAG,EAAEA,GAAI;IAACH,SAAS,EAAE,GAAGA,SAAS,IAAII,OAAO,GAAGiB,iBAAiB,CAACrB,SAAS,CAAC,GAAG,EAAE,EAAG;IAAAC,QAAA,EACrFA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;;AAEA;AAAAvB,EAAA,CA/BSH,eAAe;AAAA2B,EAAA,GAAf3B,eAAe;AAgCxB,SAASsB,iBAAiBA,CAACrB,SAAS,EAAE;EACpC,IAAIA,SAAS,CAAC2B,QAAQ,CAAC,UAAU,CAAC,EAAE,OAAO,YAAY;EACvD,IAAI3B,SAAS,CAAC2B,QAAQ,CAAC,UAAU,CAAC,EAAE,OAAO,YAAY;EACvD,IAAI3B,SAAS,CAAC2B,QAAQ,CAAC,UAAU,CAAC,EAAE,OAAO,YAAY;EACvD,IAAI3B,SAAS,CAAC2B,QAAQ,CAAC,UAAU,CAAC,EAAE,OAAO,YAAY;EACvD,IAAI3B,SAAS,CAAC2B,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAO,QAAQ;EAC/C,OAAO,EAAE;AACX;AAEA,eAAe5B,eAAe;AAAC,IAAA2B,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}